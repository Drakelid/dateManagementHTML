@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@

@model dateManagementHTML.Models.Entities.Event
@{
    ViewData["Title"] = "Create Event";
}

<div class="app-container">
    <div class="main-content">
        <div class="header-section">
            <div class="header-image-text">
                <div class="illustration">
                    <img src="@Url.Content("~/images/events.png")" alt="Events Illustration" class="dashboard-illustration" />
                </div>
                <div class="header-text">
                    <h1>Create New Event</h1>
                </div>
            </div>
        </div>

        <div class="content-card">
            <form asp-action="Create" method="post">
                @if (!ViewData.ModelState.IsValid)
                {
                    <div class="alert alert-danger">
                        <ul>
                            @foreach (var entry in ViewData.ModelState)
                            {
                                foreach (var error in entry.Value.Errors)
                                {
                                    <li><strong>@entry.Key:</strong> @error.ErrorMessage</li>
                                }
                            }
                        </ul>
                    </div>
                }
                <div class="form-group">
                    <label asp-for="EventName"></label>
                    <input asp-for="EventName" class="form-control" />
                    <span asp-validation-for="EventName" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Description"></label>
                    <textarea asp-for="Description" class="form-control"></textarea>
                    <span asp-validation-for="Description" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Location"></label>
                    <input asp-for="Location" class="form-control" />
                    <span asp-validation-for="Location" class="text-danger"></span>
                </div>

                <div class="form-row">
                    <div class="form-group col-md-6">
                        <label asp-for="StartDateTime"></label>
                        <div class="form-group">
                            <label>From (Date)</label>
                            <input type="date" id="startDate" class="form-control" />
                        </div>

                        <div class="form-group">
                            <label>From (Time)</label>
                            <input type="time" id="startTime" class="form-control" />
                        </div>
                        <span asp-validation-for="StartDateTime" class="text-danger"></span>
                    </div>

                    <div class="form-group col-md-6">
                        <label asp-for="EndDateTime"></label>
                        <div class="form-group">
                            <label>To (Date)</label>
                            <input type="date" id="endDate" class="form-control" />
                        </div>

                        <div class="form-group">
                            <label>To (Time)</label>
                            <input type="time" id="endTime" class="form-control" />
                        </div>
                        <span asp-validation-for="EndDateTime" class="text-danger"></span>
                    </div>
                </div>

                <input type="hidden" asp-for="StartDateTime" />
<input type="hidden" asp-for="EndDateTime" />


                <div id="workingDaysInfo" class="text-info mt-2"></div>

                <div class="form-check">
                    <input asp-for="IsAllDay" class="form-check-input" />
                    <label asp-for="IsAllDay" class="form-check-label"></label>
                </div>

                <div class="form-group">
                    <label asp-for="Tag"></label>
                    <select asp-for="Tag" class="form-control">
                        <option value="Work">Work</option>
                        <option value="Health">Health</option>
                        <option value="Social">Social</option>
                    </select>
                    <span asp-validation-for="Tag" class="text-danger"></span>
                </div>
                    
                <button type="submit" class="create-event-btn">Save Event</button>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        const startInput = document.querySelector('[name="StartDateTime"]');
        const endInput = document.querySelector('[name="EndDateTime"]');
        const infoDiv = document.getElementById("workingDaysInfo");

        function updateWorkingDays() {
            const start = startInput.value.split("T")[0];
            const end = endInput.value.split("T")[0];

            if (!start || !end) {
                infoDiv.textContent = '';
                return;
            }

            fetch(`/Events/GetWorkingDays?start=${start}&end=${end}`)
                .then(res => res.json())
                .then(data => {
                    console.log("API response:", data);

                    let message = `You selected ${data.totalDays} day(s): ${data.workingDays} working day(s), excluding ${data.weekends} weekend day(s) and ${data.holidays} holiday(s).`;

                    if (data.excludedHolidayList && data.excludedHolidayList.length > 0) {
                        message += "<br><strong>Excluded Holidays:</strong><ul>";

                        data.excludedHolidayList.forEach(h => {
                            const holidayDate = new Date(h.date);
                            const formatted = holidayDate.toLocaleDateString('en-US', {
                                day: '2-digit',
                                month: 'long',
                                year: 'numeric'
                            });

                            const parts = formatted.split(" ");
                            const capitalized = `${parts[0]} ${parts[1].charAt(0).toUpperCase() + parts[1].slice(1)} ${parts[2]}`;

                            message += `<li>${capitalized}: ${h.name}</li>`;
                        });

                        message += "</ul>";
                    }

                    infoDiv.innerHTML = message;
                })

                .catch(err => {
                    console.error("Error fetching working days:", err);
                    infoDiv.textContent = '';
                });
        }

        // These should be *outside* the function
        startInput.addEventListener('change', updateWorkingDays);
        endInput.addEventListener('change', updateWorkingDays);

        const form = document.querySelector("form");
        form.addEventListener("submit", function () {
            const startDate = document.getElementById("startDate").value;
            const startTime = document.getElementById("startTime").value;
            const endDate = document.getElementById("endDate").value;
            const endTime = document.getElementById("endTime").value;

            if (startDate && startTime) {
                document.querySelector('[name="StartDateTime"]').value = `${startDate}T${startTime}`;
            }

            if (endDate && endTime) {
                document.querySelector('[name="EndDateTime"]').value = `${endDate}T${endTime}`;
            }
        });
    </script>
}


